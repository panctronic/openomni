from __future__ import print_function
from __future__ import unicode_literals
from __future__ import division
from __future__ import absolute_import


import argparse
from openomni.packet import Packet
from openomni.message import MessageBuilder

def print_data(args, data=None, raw_string=None):
    
    if data:
        packet = Packet.from_hex(data)
    else:
        packet = Packet.from_string(raw_string)
      

    if packet.is_valid():
        print(packet)
        return packet


def main(options=None):
    parser = argparse.ArgumentParser(description="Print out structured version of packet (given as a hex string).")
    parser.add_argument("--infile", type=argparse.FileType("r"),
            help="Input text-formatted file.")
    parser.add_argument("data", metavar="data", type=str, nargs="*",
                        help="data as a hex string")
    parser.add_argument("--json", action="store_true",
                        help="print as json (default: text line)")

    args = parser.parse_args()

    if args.infile:
        packets = [Packet.from_string(l) for l in args.infile]
    elif args.data:
        packets = [Packet.from_hex(x) for x in args.data]
    else:
        print("Need either --infile or hex data args.")
        return

    for packet in packets:
        if packet.is_valid():
            if args.json:
                print(packet.as_json())
            else:
                # compact style:
                print(packet)
        else:
            print("Invalid packet")

if __name__ == "__main__":
    main()
